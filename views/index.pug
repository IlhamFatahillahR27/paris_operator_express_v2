extends layout

block content
  .wrapper
    .card(style="width: 75%;")
      .card-header
        h1= title
        p Welcome to #{title}
      #log-container.log-viewer
        pre#log-content
    div(style="width: 25%;")
      .card
        .card-header
          h1= "List Port"
        .card-body
          .list-port
            each item in port_list
              - let cardClass = (item === selected_port) ? 'card-success' : ''
              .card(class=cardClass style="flex-grow:1;")
                #item.card-body #{item}
      .section-legend
        .item-legend
          svg(xmlns="http://www.w3.org/2000/svg" width="24" height="27.428571428571427" viewBox="0 0 448 512")
            path(fill="#20c997" d="M0 96c0-35.3 28.7-64 64-64h320c35.3 0 64 28.7 64 64v320c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64z")
          p Selected
        .item-legend
          svg(xmlns="http://www.w3.org/2000/svg" width="24" height="27.428571428571427" viewBox="0 0 448 512")
            path(fill="currentColor" d="M0 96c0-35.3 28.7-64 64-64h320c35.3 0 64 28.7 64 64v320c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64z")
          p Not Selected



  script(src="/socket.io/socket.io.js")
  script.
    const socket = io();
    const logContent = document.getElementById('log-content');
    const logContainer = document.getElementById('log-container');
    let autoScroll = true;

    // Fungsi untuk scroll otomatis ke bawah
    function scrollToBottom() {
      if (autoScroll) {
        logContainer.scrollTop = logContainer.scrollHeight;
      }
    }

    socket.on('log_update', (data) => {
      logContent.innerHTML += data + '\n';
      scrollToBottom();
    });

    // Event listener untuk mendeteksi scroll manual
    logContainer.addEventListener('scroll', () => {
      const nearBottom = logContainer.scrollTop + logContainer.clientHeight >= logContainer.scrollHeight - 10;
      autoScroll = nearBottom;
    });